{{javadoc this "bitand"}}
public {{className}} bitAnd({{className}} other) {
  logger.trace("bitAnd - other: {}", other);
  {{className}} result = new {{className}}();
  execute(() -> {{nativeMethod this "bitand"}}(getValue(), other.getValue(), result.getAddress()));
  return result;
}

{{javadoc this "bitor"}}
public {{className}} bitOr({{className}} other) {
  logger.trace("bitOr - other: {}", other);
  {{className}} result = new {{className}}();
  execute(() -> {{nativeMethod this "bitor"}}(getValue(), other.getValue(), result.getAddress()));
  return result;
}

{{javadoc this "bitxor"}}
public {{className}} bitXor({{className}} other) {
  logger.trace("bitXor - other: {}", other);
  {{className}} result = new {{className}}();
  execute(() -> {{nativeMethod this "bitxor"}}(getValue(), other.getValue(), result.getAddress()));
  return result;
}

{{javadoc this "not"}}
public {{className}} not() {
  logger.trace("not");
  {{className}} result = new {{className}}();
  execute(() -> {{nativeMethod this "not"}}(getValue(), result.getAddress()));
  return result;
}
